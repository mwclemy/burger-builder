{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","className","styles","price","connect","state","orders","loading","error","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","retreivedOrders","Spinner","Order","id","axios","module","exports"],"mappings":"4KAiBeA,EAfD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CAACC,KAAMF,EAAgBG,OAAQL,EAAMC,YAAYC,KAEtE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BAAMC,IAAKD,EAAGJ,MAAOI,EAAGJ,KAAxB,IAA+BI,EAAGH,OAAlC,QAEX,OACA,yBAAKK,UAAWC,IAAOZ,OACnB,2CAAiBO,GACjB,qCAAU,sCAAYN,EAAMY,U,gCCqCrBC,uBAfS,SAAAC,GACpB,MAAO,CACHC,OAAQD,EAAMf,MAAMgB,OACpBC,QAASF,EAAMf,MAAMiB,QACrBC,MAAOH,EAAMf,MAAMkB,MACnBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAGA,SAAAC,GACvB,MAAO,CACHC,cAAgB,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,QAIhEP,CAA6CW,aA1C7C,SAAAxB,GAAU,IACdkB,EAAwDlB,EAAxDkB,MAAOE,EAAiDpB,EAAjDoB,OAAQE,EAAyCtB,EAAzCsB,cAAeL,EAA0BjB,EAA1BiB,MAAOF,EAAmBf,EAAnBe,OAAQC,EAAWhB,EAAXgB,QACpDS,qBAAU,WACNH,EAAcJ,EAAOE,KACtB,CAACF,EAAOE,EAAQE,IAEnB,IAAII,EAAkBT,EAAQ,2DAAsC,kBAACU,EAAA,EAAD,MAYpE,OAXIZ,IACAW,EAAiBX,EAAOR,KAAI,SAAAR,GAChB,OAAO,kBAAC6B,EAAD,CACKnB,IAAKV,EAAM8B,GACX5B,YAAaF,EAAME,YACnBW,MAAOb,EAAMa,YAGrCI,IACAU,EAAgB,kBAACC,EAAA,EAAD,OAGhB,6BACSD,KAsBoEI,O,mBCjDrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.d72b938b.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './order.module.css';\nconst order = (props) =>{ \n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]});\n    }\n    const ingredientOutput = ingredients.map(ig => {\n        return <span key={ig.name}>{ig.name}({ig.amount})</span>\n    })\n    return (\n    <div className={styles.order}>\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Price: <strong>USD{props.price}</strong></p>\n    </div>\n)};\n\nexport default order;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\n\nconst Orders = props => {\n    const {token, userId, onFetchOrders, error, orders, loading} = props;\n    useEffect(() => {\n        onFetchOrders(token, userId);\n    }, [token, userId, onFetchOrders]);\n\n    let retreivedOrders = error ? <p> Unable to retrieve orders!!</p> : <Spinner/>;\n    if (orders) {\n        retreivedOrders =orders.map(order => {\n                    return(<Order \n                                key={order.id}\n                                ingredients={order.ingredients}\n                                price={order.price}/>)\n                    })\n    }\n    if (loading){\n        retreivedOrders=<Spinner/>;\n    }\n    return(\n        <div>\n                {retreivedOrders}\n        </div>\n        \n    );\n        \n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        error: state.order.error,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders : (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    } \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__2zviv\"};"],"sourceRoot":""}