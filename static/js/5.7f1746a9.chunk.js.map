{"version":3,"sources":["components/Order/order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","className","styles","price","Orders","this","onFetchOrders","token","userId","orders","error","Spinner","Order","id","loading","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,kHCgBXC,EAfD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CAACC,KAAMF,EAAgBG,OAAQL,EAAMC,YAAYC,KAEtE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BAAMC,IAAKD,EAAGJ,MAAOI,EAAGJ,KAAxB,IAA+BI,EAAGH,OAAlC,QAEX,OACA,yBAAKK,UAAWC,IAAOZ,OACnB,2CAAiBO,GACjB,qCAAU,sCAAYN,EAAMY,U,gCCL9BC,E,kLAGCC,KAAKd,MAAMe,cAAcD,KAAKd,MAAMgB,MAAOF,KAAKd,MAAMiB,U,+BAIrD,IAAIC,EAASJ,KAAKd,MAAMmB,MAAQ,2DAAsC,kBAACC,EAAA,EAAD,MAYtE,OAXIN,KAAKd,MAAMkB,SACXA,EAAQJ,KAAKd,MAAMkB,OAAOX,KAAI,SAAAR,GAClB,OAAO,kBAACsB,EAAD,CACKZ,IAAKV,EAAMuB,GACXrB,YAAaF,EAAME,YACnBW,MAAOb,EAAMa,YAGrCE,KAAKd,MAAMuB,UACXL,EAAO,kBAACE,EAAA,EAAD,OAGP,6BACMF,O,GArBGM,aA4CNC,uBAfS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAM3B,MAAMmB,OACpBK,QAASG,EAAM3B,MAAMwB,QACrBJ,MAAOO,EAAM3B,MAAMoB,MACnBH,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,WAGA,SAAAW,GACvB,MAAO,CACHb,cAAgB,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,QAIhEQ,CAA6CK,YAAiBjB,EAAQkB","file":"static/js/5.7f1746a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__2zviv\"};","import React from 'react';\nimport styles from './order.module.css';\nconst order = (props) =>{ \n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]});\n    }\n    const ingredientOutput = ingredients.map(ig => {\n        return <span key={ig.name}>{ig.name}({ig.amount})</span>\n    })\n    return (\n    <div className={styles.order}>\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Price: <strong>USD{props.price}</strong></p>\n    </div>\n)};\n\nexport default order;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n       this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = this.props.error ? <p> Unable to retrieve orders!!</p> : <Spinner/>;\n        if (this.props.orders) {\n            orders =this.props.orders.map(order => {\n                        return(<Order \n                                    key={order.id}\n                                    ingredients={order.ingredients}\n                                    price={order.price}/>)\n                     })\n        }\n        if (this.props.loading){\n            orders=<Spinner/>;\n        }\n        return(\n            <div>\n                 {orders}\n            </div>\n          \n        );\n       \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        error: state.order.error,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders : (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    } \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}